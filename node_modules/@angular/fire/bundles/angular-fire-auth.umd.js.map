{"version":3,"file":"angular-fire-auth.umd.js","sources":["../../../src/auth/base.ts","../../../src/auth/auth.ts","../../../src/auth/auth.module.ts"],"names":["InjectionToken","ɵAngularFireSchedulers","ɵkeepUnstableUntilFirstFactory","Subject","of","observeOn","switchMap","map","ɵfirebaseAppFactory","ɵfetchInstance","shareReplay","isPlatformServer","first","Observable","from","merge","filter","ɵlazySDKProxy","Injectable","Inject","FIREBASE_OPTIONS","Optional","FIREBASE_APP_NAME","PLATFORM_ID","NgZone","ɵapplyMixins","NgModule"],"mappings":"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","sourcesContent":["export const proxyPolyfillCompat = {\n  app: null,\n  applyActionCode: null,\n  checkActionCode: null,\n  confirmPasswordReset: null,\n  createUserWithEmailAndPassword: null,\n  currentUser: null,\n  fetchSignInMethodsForEmail: null,\n  isSignInWithEmailLink: null,\n  getRedirectResult: null,\n  languageCode: null,\n  settings: null,\n  onAuthStateChanged: null,\n  onIdTokenChanged: null,\n  sendSignInLinkToEmail: null,\n  sendPasswordResetEmail: null,\n  setPersistence: null,\n  signInAndRetrieveDataWithCredential: null,\n  signInAnonymously: null,\n  signInWithCredential: null,\n  signInWithCustomToken: null,\n  signInWithEmailAndPassword: null,\n  signInWithPhoneNumber: null,\n  signInWithEmailLink: null,\n  signInWithPopup: null,\n  signInWithRedirect: null,\n  signOut: null,\n  tenantId: null,\n  updateCurrentUser: null,\n  useDeviceLanguage: null,\n  useEmulator: null,\n  verifyPasswordResetCode: null,\n};\n","import { Injectable, Inject, Optional, NgZone, PLATFORM_ID, InjectionToken } from '@angular/core';\nimport { Observable, of, from, merge, Subject } from 'rxjs';\nimport { switchMap, map, observeOn, shareReplay, first, filter } from 'rxjs/operators';\nimport {\n  FIREBASE_OPTIONS,\n  FIREBASE_APP_NAME,\n  FirebaseOptions,\n  FirebaseAppConfig,\n  ɵPromiseProxy,\n  ɵlazySDKProxy,\n  ɵfirebaseAppFactory,\n  ɵAngularFireSchedulers,\n  ɵkeepUnstableUntilFirstFactory,\n  ɵapplyMixins\n} from '@angular/fire';\nimport firebase from 'firebase/app';\nimport { isPlatformServer } from '@angular/common';\nimport { proxyPolyfillCompat } from './base';\nimport { ɵfetchInstance } from '@angular/fire';\n\nexport interface AngularFireAuth extends ɵPromiseProxy<firebase.auth.Auth> {}\n\ntype UseEmulatorArguments = [string, number];\nexport const USE_EMULATOR = new InjectionToken<UseEmulatorArguments>('angularfire2.auth.use-emulator');\n\nexport const SETTINGS = new InjectionToken<firebase.auth.AuthSettings>('angularfire2.auth.settings');\nexport const TENANT_ID = new InjectionToken<string>('angularfire2.auth.tenant-id');\nexport const LANGUAGE_CODE = new InjectionToken<string>('angularfire2.auth.langugage-code');\nexport const USE_DEVICE_LANGUAGE = new InjectionToken<boolean>('angularfire2.auth.use-device-language');\nexport const PERSISTENCE = new InjectionToken<string>('angularfire.auth.persistence');\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class AngularFireAuth {\n\n  /**\n   * Observable of authentication state; as of Firebase 4.0 this is only triggered via sign-in/out\n   */\n  public readonly authState: Observable<firebase.User|null>;\n\n  /**\n   * Observable of the currently signed-in user's JWT token used to identify the user to a Firebase service (or null).\n   */\n  public readonly idToken: Observable<string|null>;\n\n  /**\n   * Observable of the currently signed-in user (or null).\n   */\n  public readonly user: Observable<firebase.User|null>;\n\n  /**\n   * Observable of the currently signed-in user's IdTokenResult object which contains the ID token JWT string and other\n   * helper properties for getting different data associated with the token as well as all the decoded payload claims\n   * (or null).\n   */\n  public readonly idTokenResult: Observable<firebase.auth.IdTokenResult|null>;\n\n  /**\n   * Observable of the currently signed-in user's credential, or null\n   */\n  public readonly credential: Observable<Required<firebase.auth.UserCredential>|null>;\n\n  constructor(\n    @Inject(FIREBASE_OPTIONS) options: FirebaseOptions,\n    @Optional() @Inject(FIREBASE_APP_NAME) nameOrConfig: string|FirebaseAppConfig|null|undefined,\n    // tslint:disable-next-line:ban-types\n    @Inject(PLATFORM_ID) platformId: Object,\n    zone: NgZone,\n    @Optional() @Inject(USE_EMULATOR) _useEmulator: any, // can't use the tuple here\n    @Optional() @Inject(SETTINGS) _settings: any, // can't use firebase.auth.AuthSettings here\n    @Optional() @Inject(TENANT_ID) tenantId: string | null,\n    @Optional() @Inject(LANGUAGE_CODE) languageCode: string | null,\n    @Optional() @Inject(USE_DEVICE_LANGUAGE) useDeviceLanguage: boolean | null,\n    @Optional() @Inject(PERSISTENCE) persistence: string | null,\n  ) {\n    const schedulers = new ɵAngularFireSchedulers(zone);\n    const keepUnstableUntilFirst = ɵkeepUnstableUntilFirstFactory(schedulers);\n    const logins = new Subject<Required<firebase.auth.UserCredential>>();\n\n    const auth = of(undefined).pipe(\n      observeOn(schedulers.outsideAngular),\n      switchMap(() => zone.runOutsideAngular(() => import('firebase/auth'))),\n      map(() => ɵfirebaseAppFactory(options, zone, nameOrConfig)),\n      map(app => zone.runOutsideAngular(() => {\n        const useEmulator: UseEmulatorArguments | null = _useEmulator;\n        const settings: firebase.auth.AuthSettings | null = _settings;\n        return ɵfetchInstance(`${app.name}.auth`, 'AngularFireAuth', app, () => {\n          const auth = zone.runOutsideAngular(() => app.auth());\n          if (useEmulator) {\n            // Firebase Auth doesn't conform to the useEmulator convention, let's smooth that over\n            auth.useEmulator(`http://${useEmulator.join(':')}`);\n          }\n          if (tenantId) {\n            auth.tenantId = tenantId;\n          }\n          auth.languageCode = languageCode;\n          if (useDeviceLanguage) {\n            auth.useDeviceLanguage();\n          }\n          if (settings) {\n            auth.settings = settings;\n          }\n          if (persistence) {\n            auth.setPersistence(persistence);\n          }\n          return auth;\n        }, [useEmulator, tenantId, languageCode, useDeviceLanguage, settings, persistence]);\n      })),\n      shareReplay({ bufferSize: 1, refCount: false }),\n    );\n\n    if (isPlatformServer(platformId)) {\n\n      this.authState = this.user = this.idToken = this.idTokenResult = this.credential = of(null);\n\n    } else {\n\n      // HACK, as we're exporting auth.Auth, rather than auth, developers importing firebase.auth\n      //       (e.g, `import { auth } from 'firebase/app'`) are getting an undefined auth object unexpectedly\n      //       as we're completely lazy. Let's eagerly load the Auth SDK here.\n      //       There could potentially be race conditions still... but this greatly decreases the odds while\n      //       we reevaluate the API.\n      const _ = auth.pipe(first()).subscribe();\n\n      this.authState = auth.pipe(\n        // wait for getRedirectResult otherwise we often get extraneous nulls firing on page load even if\n        // a user is signed in\n        switchMap(auth => auth.getRedirectResult().then(() => auth, () => auth)),\n        switchMap(auth => zone.runOutsideAngular(() => new Observable<firebase.User|null>(auth.onAuthStateChanged.bind(auth)))),\n        keepUnstableUntilFirst,\n        // TODO figure out why I needed share, perhaps it's the observable construction?\n        shareReplay(1)\n      );\n\n      this.user = auth.pipe(\n        // see comment on authState\n        switchMap(auth => auth.getRedirectResult().then(() => auth, () => auth)),\n        switchMap(auth => zone.runOutsideAngular(() => new Observable<firebase.User|null>(auth.onIdTokenChanged.bind(auth)))),\n        keepUnstableUntilFirst,\n        shareReplay(1) // see authState\n      );\n\n      this.idToken = this.user.pipe(\n        switchMap(user => user ? from(user.getIdToken()) : of(null))\n      );\n\n      this.idTokenResult = this.user.pipe(\n        switchMap(user => user ? from(user.getIdTokenResult()) : of(null))\n      );\n\n      this.credential = auth.pipe(\n        switchMap(auth => merge(\n          auth.getRedirectResult().then(it => it, () => null),\n          logins,\n          // pipe in null authState to make credential zipable, just a weird devexp if\n          // authState and user go null to still have a credential\n          this.authState.pipe(filter(it => !it))\n        )),\n        // handle the { user: { } } when a user is already logged in, rather have null\n        map(credential => credential?.user ? credential : null),\n        keepUnstableUntilFirst,\n        shareReplay(1)\n      );\n\n    }\n\n    return ɵlazySDKProxy(this, auth, zone, { spy: {\n      apply: (name, _, val) => {\n        // If they call a signIn or createUser function listen into the promise\n        // this will give us the user credential, push onto the logins Subject\n        // to be consumed in .credential\n        if (name.startsWith('signIn') || name.startsWith('createUser')) {\n          // TODO fix the types, the trouble is UserCredential has everything optional\n          val.then((user: firebase.auth.UserCredential) => logins.next(user as any));\n        }\n      }\n    }});\n\n  }\n\n}\n\nɵapplyMixins(AngularFireAuth, [proxyPolyfillCompat]);\n","import { NgModule } from '@angular/core';\nimport { AngularFireAuth } from './auth';\n\n@NgModule({\n  providers: [ AngularFireAuth ]\n})\nexport class AngularFireAuthModule { }\n"]}